.syntax--php {

  &.syntax--storage.syntax--modifier.syntax--extends, // extends
  &.syntax--storage.syntax--modifier.syntax--abstract, // abstract
  &.syntax--basic-functions, // define()
  &.syntax--function.syntax--support,
  &.syntax--function.syntax--math, // floor()
  &.syntax--function.syntax--file, // realpath(), file_exists(), is_writable()
  &.syntax--function.syntax--dir, // opendir(), readdir()
  &.syntax--function.syntax--info, // ini_get()
  &.syntax--function.syntax--array, // array_merge()
  &.syntax--storage.syntax--type, // parent, (int)
  &.syntax--storage.syntax--type.syntax--class, // class
  &.syntax--storage.syntax--type.syntax--function, // function
  &.syntax--support.syntax--construct, // array(), isset(), empty()
  // &.property.variable, // $var->property->function
  &.syntax--new, // new
  // &.syntax--control, // if, then, else, return, exit(), foreach, switch, case, default, break, die, while
  &.syntax--class.syntax--variable // Validate::$type ($type)
  {
    color: @syntax;
  }

  &.syntax--classobj,
  // &.storage.modifier, // public, private, global
  &.syntax--storage.syntax--modifier.syntax--reference, // &
  &.syntax--session, // session_start()
  &.syntax--import, // require(), include()
  &.syntax--network, // header()
  &.syntax--support.syntax--network, // header()
  &.syntax--construct, // echo
  &.syntax--keyword.syntax--exception, // try, catch, finally
  &.syntax--storage.syntax--modifier, // public, private, global
  {
    color: @syntax-alt;
  }

  &.syntax--inherited-class,
  &.syntax--support.syntax--class,
  &.syntax--class.syntax--name,
  &.syntax--control, // if, then, else, return, exit(), foreach, switch, case, default, break, die, while
  {
    // color: @syntax-alt;
    color: @text;
  }

  &.syntax--string,
  &.syntax--string-contents {
    color: @content;
  }

  &.syntax--storage.syntax--type, // typecast (string) or (int)
  &.syntax--constant {
    color: @constant;
  }

  // &.syntax--sql {
  //   background: fade(@content, 10%);
  // }

  // &.syntax--control,
  // &.syntax--storage.syntax--modifier,
  &.syntax--classobj,
  &.syntax--network,
  &.syntax--import,
  &.syntax--function.syntax--var,
  // &.syntax--function.syntax--construct,
  &.syntax--function.syntax--funchand,
  &.syntax--meta.syntax--function-call,
  &.syntax--support.syntax--function:not(.syntax--output),
  // &.syntax--keyword.syntax--exception, // try, catch, finally
  {
    font-weight: bold;
  }

  &.syntax--keyword.syntax--operator.syntax--string
  {
    opacity: 0.667;
  }

  .syntax--operator {
    &.syntax--arithmetic, // +, *
    &.syntax--assignment, // =
    &.syntax--comparison, // >
    &.syntax--increment-decrement, // ++, --
    &.syntax--key, // =>
    &.syntax--class,
    &.syntax--string,
    {
      // color:@syntax-alt;
      color: @syntax;
      // color: @text;
    }

    &.syntax--support.syntax--function.syntax--construct.syntax--output,
    &.syntax--class { // ->, ::
      font-weight: normal;
    }

    &.syntax--logical // ||, as, &&, !
    {
      // color: @syntax-alt;
      // color: @constant;
      color: @syntax;
      font-weight: normal;
    }
  }

  &.syntax--arguments {
    &:not(.syntax--argument) {
      color: fade(@text, 66%);
    }
  }

  &.syntax--embedded {
    &.syntax--begin,
    &.syntax--end,
    &.syntax--line {
      color: @neutral;

      .syntax--source.syntax--php {
        color: inherit;
      }
    }
  }

  &.syntax--regexp {
    .syntax--punctuation {
      opacity: 0.5;
    }
    &.syntax--character-class {
      background: fade(@content, 10%);
    }
    &.syntax--arbitrary-repetition {
      // background: fade(@syntax, 10%);
      color: @syntax;
    }
  }
}
